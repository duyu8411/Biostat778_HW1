setwd("~/Documents/PHD - 2nd Term/Advanced Statistics Computing/HW1/Biostat778_HW1")
system("R CMD build Homework1")
system("R CMD check Homework1_1.0.tar.gz")
rep(0,100)-rep(1,1)%*%t(mu)
mu <- rep(0, 100)
rep(0,100)-rep(1,1)%*%t(mu)
mu <- rep(0, 100)
S <- diag(1, 100)
x <- rep(0, 100)
##Fast Multivariate Normal Density
dmvnorm <- function(x, mu, S, log = TRUE) {
k=length(mu)
n=nrow(x)
##Check if S is positive definite
R=tryCatch({chol(S)},
error=function(e){
message("S is not positive definite")
})
logdetS=2*sum(log(diag(R)))
T=x-rep(1,n)%*%t(mu)
C=forwardsolve(t(R),t(T))
term3=diag(crossprod(C))
fx=(-k/2)*log(2*pi)-(1/2)*logdetS-(1/2)*term3
if(log==TRUE){
fx=fx
}else {
fx=exp(fx)
}
return(fx)
}
dmvnorm(x, mu, S, log = TRUE)
k=length(mu)
n=nrow(x)
dim(rep(0,100))
x=rep(0,100)
x
x=as.matrix(x)
x
View(x)
dim(x)
x=rep(0,100)
t(x)
x=t(x)
x=rep(1,100)
is.matrix(x)
if (!is.matrix(x)){
x=t(as.matrix(x))
}
t(rep(1,100))
system("R CMD build Homework1")
system("R CMD check Homework1_1.0.tar.gz")
library(datasets)
data(airquality)
X <- cbind(1, data.matrix(airquality[, -1]))
y <- airquality$Ozone
View(X)
r=cbind(X,y)
X=X[complete.cases(r),]
y=as.matrix(y[complete.cases(r),])
f=y[complete.cases(r),]
complete.cases(r)
y=as.matrix(y[complete.cases(r)])
system("R CMD build Homework1")
system("R CMD check Homework1_1.0.tar.gz")
is.matrix(c(2,3,2,1,2,3))
as.matrix(c(2,3,2,1,2,3))
rep(0,100)[2]
rep(0,100)[2,]
set.seed(2)
## Generate predictor matrix
n <- 1000
p <- 50
X <- cbind(1, matrix(rnorm(n * (p - 1)), n, p - 1))
## Coefficents
b <- rnorm(p)
## Response
y <- X %*% b + rnorm(n)
View(y)
y
y[2]
y[2,]
y[999]
